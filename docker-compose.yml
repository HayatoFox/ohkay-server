# ========================================
# OHKAY SERVER - PRODUCTION CONFIGURATION
# Architecture: PostgreSQL Unifié + WebRTC + Création Dynamique DB (v1.1.0+)
# ========================================

services:
  # ========================================
  # APPLICATION OHKAY SERVER
  # ========================================
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ohkay-server
    restart: unless-stopped
    ports:
      - "8100:8100"                    # API HTTP/WebSocket
      - "7500-8000:7500-8000/udp"      # WebRTC UDP (501 ports = ~250 connexions simultanées)
      - "7500-8000:7500-8000/tcp"      # WebRTC TCP (fallback)
    environment:
      # Application
      - NODE_ENV=production
      - PORT=8100
      
      # Voice Server (WebRTC) - v1.2.0
      - VOICE_ANNOUNCED_IP=${VOICE_ANNOUNCED_IP:-}
      - VOICE_RTC_MIN_PORT=7500
      - VOICE_RTC_MAX_PORT=8000
      
      # Database Connections (toutes sur le même PostgreSQL)
      - AUTH_DB_HOST=postgres
      - AUTH_DB_PORT=5432
      - AUTH_DB_NAME=ohkay_auth
      
      - DM_DB_HOST=postgres
      - DM_DB_PORT=5432
      - DM_DB_NAME=ohkay_dms
      
      - REGISTRY_DB_HOST=postgres
      - REGISTRY_DB_PORT=5432
      - REGISTRY_DB_NAME=ohkay_server_registry
      
      # Database Credentials
      - DB_USER=${DB_USER:-ohkay_user}
      - DB_PASSWORD=${DB_PASSWORD}
      
      # Database Admin (pour création dynamique de DB serveur) - v1.1.0
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_ADMIN_USER=postgres
      - DB_ADMIN_PASSWORD=${POSTGRES_PASSWORD:-${DB_PASSWORD}}
      
      # Security
      - JWT_SECRET=${JWT_SECRET}
      - INSTANCE_PASSWORD=${INSTANCE_PASSWORD}
      - DB_ENCRYPTION_KEY=${DB_ENCRYPTION_KEY}
      - MASTER_ENCRYPTION_KEY=${MASTER_ENCRYPTION_KEY}
      
      # Logging
      - LOG_LEVEL=${LOG_LEVEL:-info}
      
      # CORS
      - CORS_ORIGIN=${CORS_ORIGIN:-*}
      
    volumes:
      - ./logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - ohkay-network
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:8100/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # ========================================
  # POSTGRESQL UNIFIÉ - Toutes les bases de données (v1.1.0)
  # Contient: ohkay_auth, ohkay_dms, ohkay_server_registry + serveurs créés dynamiquement
  # ========================================
  postgres:
    image: postgres:16-alpine
    container_name: ohkay-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-${DB_PASSWORD}}
      - POSTGRES_USER=postgres
      - DB_USER=${DB_USER:-ohkay_user}
      - DB_PASSWORD=${DB_PASSWORD}
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"  # Exposé pour debug (optionnel, peut être retiré en prod)
    networks:
      - ohkay-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    command:
      - "postgres"
      - "-c"
      - "max_connections=200"
      - "-c"
      - "shared_buffers=256MB"

networks:
  ohkay-network:
    driver: bridge

volumes:
  postgres-data:
